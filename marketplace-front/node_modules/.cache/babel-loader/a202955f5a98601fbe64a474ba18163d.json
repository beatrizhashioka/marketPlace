{"ast":null,"code":"import decode from \"jwt-decode\";\nexport const TOKEN_KEY = \"@CESTA:token\";\nexport const USER = \"@CESTA:user\";\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const login = (token, user) => {\n  localStorage.setItem(TOKEN_KEY, token);\n  localStorage.setItem(USER, JSON.stringify(user));\n};\nexport const logout = () => {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(USER);\n};\nexport const userLocal = () => JSON.parse(localStorage.getItem(USER));\nexport const isTokenExpired = () => {\n  try {\n    const decoded = decode(getToken());\n    console.log(decoded);\n    const date = new Date() / 1000;\n    console.log(date);\n\n    if (decoded.exp < date) {\n      return true;\n    }\n\n    return false;\n  } catch (err) {\n    console.log(\"Expired check failed!\");\n    return false;\n  }\n};","map":{"version":3,"sources":["C:/Users/Hashioka/marketplace-project/marketplace-front/src/services/auth.js"],"names":["decode","TOKEN_KEY","USER","isAuthenticated","localStorage","getItem","getToken","login","token","user","setItem","JSON","stringify","logout","removeItem","userLocal","parse","isTokenExpired","decoded","console","log","date","Date","exp","err"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,YAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,cAAlB;AACP,OAAO,MAAMC,IAAI,GAAG,aAAb;AAEP,OAAO,MAAMC,eAAe,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBJ,SAArB,MAAoC,IAAlE;AAEP,OAAO,MAAMK,QAAQ,GAAG,MAAMF,YAAY,CAACC,OAAb,CAAqBJ,SAArB,CAAvB;AAEP,OAAO,MAAMM,KAAK,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACpCL,EAAAA,YAAY,CAACM,OAAb,CAAqBT,SAArB,EAAgCO,KAAhC;AACAJ,EAAAA,YAAY,CAACM,OAAb,CAAqBR,IAArB,EAA2BS,IAAI,CAACC,SAAL,CAAeH,IAAf,CAA3B;AACD,CAHM;AAKP,OAAO,MAAMI,MAAM,GAAG,MAAM;AAC1BT,EAAAA,YAAY,CAACU,UAAb,CAAwBb,SAAxB;AACAG,EAAAA,YAAY,CAACU,UAAb,CAAwBZ,IAAxB;AACD,CAHM;AAKP,OAAO,MAAMa,SAAS,GAAG,MAAMJ,IAAI,CAACK,KAAL,CAAWZ,YAAY,CAACC,OAAb,CAAqBH,IAArB,CAAX,CAAxB;AAEP,OAAO,MAAMe,cAAc,GAAG,MAAM;AAClC,MAAI;AACF,UAAMC,OAAO,GAAGlB,MAAM,CAACM,QAAQ,EAAT,CAAtB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,UAAMG,IAAI,GAAG,IAAIC,IAAJ,KAAa,IAA1B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AAEA,QAAIH,OAAO,CAACK,GAAR,GAAcF,IAAlB,EAAwB;AACtB,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAXD,CAWE,OAAOG,GAAP,EAAY;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAO,KAAP;AACD;AACF,CAhBM","sourcesContent":["import decode from \"jwt-decode\";\r\n\r\nexport const TOKEN_KEY = \"@CESTA:token\";\r\nexport const USER = \"@CESTA:user\";\r\n\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\n\r\nexport const login = (token, user) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem(USER, JSON.stringify(user));\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(USER);\r\n};\r\n\r\nexport const userLocal = () => JSON.parse(localStorage.getItem(USER));\r\n\r\nexport const isTokenExpired = () => {\r\n  try {\r\n    const decoded = decode(getToken());\r\n    console.log(decoded);\r\n    const date = new Date() / 1000;\r\n    console.log(date);\r\n\r\n    if (decoded.exp < date) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"Expired check failed!\");\r\n    return false;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}